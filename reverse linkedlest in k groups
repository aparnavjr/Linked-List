/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode ReverseKGroup(ListNode head, int k) {
        
        if(head == null)
            return null;
        
        ListNode temp = head;
        
        int len = 0;
        while(temp != null)
        {
            temp = temp.next;
            len++;
        }
        return helper(k, len, ref head);
        
    }
    
    public static ListNode helper(int k ,int len, ref ListNode head)
    {
        int count = 0;
        ListNode curr = head;
        ListNode next = null;
        ListNode result = null;
       
        if(len < k)
        {
            return head;
        }
        while(count < k && curr != null)
        {
            next = curr.next;
            curr.next = result;
            result = curr;
            curr = next;
            count++;
            len--;
        }
        
        if(next != null && len >=k)
            head.next = helper(k, len, ref next);
        else
            head.next = next;
        
        return result;    
        
    }
}
